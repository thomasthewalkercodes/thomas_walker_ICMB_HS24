{
  "hash": "6432778381fce6b96c8c9c4b9cabef58",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Minus and Plus Curve\"\nauthor: \"Thomas Walker\"\n---\n\n\nSo I made everything overcomplicated whereas I think I should keep the rules of the economy simple: both numbers get added with their absolute difference to 0 (\\|x\\|). So maximum = pot and minimum =-pot for the first value we get. After randomly assigning the first value we get (z) from that range . We proceed by summing up x and y. This will give us their absolute value of worth. This one minus z should give us the new q.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nN  <- 5000 # Population.\nMU <- 0 # Mean of the Population\nstd_dev <- 20 # Standard deviation\n\npopulation <- rnorm(N, mean = MU, sd = std_dev)\nround_population <- round(population)\n\nanyone <- function(round_population){\n  sample(seq_along(round_population), 2)\n}\nanyone(round_population)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 3291 2950\n```\n\n\n:::\n\n```{.r .cell-code}\nnew_random_split <- function(x,y){\n  pot <- abs(x) + abs(y)\n  part1 <- sample(-pot:pot, 1)\n  other_pot <- x + y\n  part2 <- other_pot - part1\n  return(c(part1, part2))\n}\n\nsimulation <- function(round_population,repetitions) {\n  for (i in 1:repetitions) {\n      selected_people <- anyone(round_population)\n      person1 <- round_population[selected_people[1]]\n      person2 <- round_population[selected_people[2]]\n      new_wealth <- new_random_split(person1, person2)\n      round_population[selected_people[1]] <- new_wealth[1]\n      round_population[selected_people[2]] <- new_wealth[2]\n      \n  }\n  return(round_population)\n}\n\nrepetitions <- 10000\n\nfinal_population <- simulation(round_population, repetitions)\n\nhist(final_population, breaks = 50, main = \"After Simulation Grapn\", xlab = \"Value\", col = \"skyblue\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n\nOkay so it works!\n\nI will put up a limit again so that the graph isnt as steep.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nN  <- 5000 # Population.\nMU <- 0 # Mean of the Population\nstd_dev <- 20 # Standard deviation\n\npopulation <- rnorm(N, mean = MU, sd = std_dev)\nround_population <- round(population)\n\nanyone <- function(round_population){\n  sample(seq_along(round_population), 2)\n}\n\nnew_random_split <- function(x,y){\n  pot <- abs(x) + abs(y)\n  part1 <- sample(-pot:pot, 1)\n  other_pot <- x + y\n  part2 <- other_pot - part1\n  while (part1 > 600 || part2 > 600 || part1 < -600 || part2 < -600){\n    part1 <- sample(-pot:pot, 1)  \n    other_pot <- x + y\n    part2 <- other_pot - part1\n   }\n  return(c(part1, part2))\n}\n\nsimulation <- function(round_population,repetitions) {\n  for (i in 1:repetitions) {\n      selected_people <- anyone(round_population)\n      person1 <- round_population[selected_people[1]]\n      person2 <- round_population[selected_people[2]]\n      new_wealth <- new_random_split(person1, person2)\n      round_population[selected_people[1]] <- new_wealth[1]\n      round_population[selected_people[2]] <- new_wealth[2]\n      \n  }\n  return(round_population)\n}\n\nrepetitions <- 10000\n\nfinal_population <- simulation(round_population, repetitions)\n\nhist(final_population, breaks = 50, main = \"After Simulation Grapn\", xlab = \"Value\", col = \"skyblue\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\nnaa lets do the cut at 400. I think then it will start to look better.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nN  <- 5000 # Population.\nMU <- 0 # Mean of the Population\nstd_dev <- 20 # Standard deviation\n\npopulation <- rnorm(N, mean = MU, sd = std_dev)\nround_population <- round(population)\n\nanyone <- function(round_population){\n  sample(seq_along(round_population), 2)\n}\n\nnew_random_split <- function(x,y){\n  pot <- abs(x) + abs(y)\n  part1 <- sample(-pot:pot, 1)\n  other_pot <- x + y\n  part2 <- other_pot - part1\n  while (part1 > 400 || part2 > 400 || part1 < -400 || part2 < -400){\n    part1 <- sample(-pot:pot, 1)  \n    other_pot <- x + y\n    part2 <- other_pot - part1\n   }\n  return(c(part1, part2))\n}\n\nsimulation <- function(round_population,repetitions) {\n  for (i in 1:repetitions) {\n      selected_people <- anyone(round_population)\n      person1 <- round_population[selected_people[1]]\n      person2 <- round_population[selected_people[2]]\n      new_wealth <- new_random_split(person1, person2)\n      round_population[selected_people[1]] <- new_wealth[1]\n      round_population[selected_people[2]] <- new_wealth[2]\n      \n  }\n  return(round_population)\n}\n\nrepetitions <- 10000\n\nfinal_population <- simulation(round_population, repetitions)\n\nhist(final_population, breaks = 50, main = \"After Simulation Grapn\", xlab = \"Value\", col = \"skyblue\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\nNow lets shift the normal distribution\n\n\n::: {.cell}\n\n```{.r .cell-code}\nN  <- 5000 # Population.\nMU <- 100 # Mean of the Population\nstd_dev <- 20 # Standard deviation\n\npopulation <- rnorm(N, mean = MU, sd = std_dev)\nround_population <- round(population)\n\nanyone <- function(round_population){\n  sample(seq_along(round_population), 2)\n}\n\nnew_random_split <- function(x,y){\n  pot <- abs(x) + abs(y)\n  part1 <- sample(-pot:pot, 1)\n  other_pot <- x + y\n  part2 <- other_pot - part1\n  while (part1 > 600 || part2 > 600 || part1 < -600 || part2 < -600){\n    part1 <- sample(-pot:pot, 1)  \n    other_pot <- x + y\n    part2 <- other_pot - part1\n   }\n  return(c(part1, part2))\n}\n\nsimulation <- function(round_population,repetitions) {\n  for (i in 1:repetitions) {\n      selected_people <- anyone(round_population)\n      person1 <- round_population[selected_people[1]]\n      person2 <- round_population[selected_people[2]]\n      new_wealth <- new_random_split(person1, person2)\n      round_population[selected_people[1]] <- new_wealth[1]\n      round_population[selected_people[2]] <- new_wealth[2]\n      \n  }\n  return(round_population)\n}\n\nrepetitions <- 1000000\n\nfinal_population <- simulation(round_population, repetitions)\n\nhist(final_population, breaks = 50, main = \"After Simulation Grapn\", xlab = \"Value\", col = \"skyblue\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\nSo even if I add 0 or two more zero to the repetitions, we get this stable curve seen above. Maybe I have to take a way the maximum curving to see what will happen.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nN  <- 5000 # Population.\nMU <- 100 # Mean of the Population\nstd_dev <- 20 # Standard deviation\n\npopulation <- rnorm(N, mean = MU, sd = std_dev)\nround_population <- round(population)\n\nanyone <- function(round_population){\n  sample(seq_along(round_population), 2)\n}\n\nnew_random_split <- function(x,y){\n  pot <- abs(x) + abs(y)\n  part1 <- sample(-pot:pot, 1)\n  other_pot <- x + y\n  part2 <- other_pot - part1\n  return(c(part1, part2))\n}\n\nsimulation <- function(round_population,repetitions) {\n  for (i in 1:repetitions) {\n      selected_people <- anyone(round_population)\n      person1 <- round_population[selected_people[1]]\n      person2 <- round_population[selected_people[2]]\n      new_wealth <- new_random_split(person1, person2)\n      round_population[selected_people[1]] <- new_wealth[1]\n      round_population[selected_people[2]] <- new_wealth[2]\n      \n  }\n  return(round_population)\n}\n\nrepetitions <- 10000\n\nfinal_population <- simulation(round_population, repetitions)\n\nhist(final_population, breaks = 50, main = \"After Simulation Grapn\", xlab = \"Value\", col = \"skyblue\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\nI created even more extreme wealth than ever seen before. So lets cut it at 1000 and go from there.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nN  <- 5000 # Population.\nMU <- 100 # Mean of the Population\nstd_dev <- 20 # Standard deviation\n\npopulation <- rnorm(N, mean = MU, sd = std_dev)\nround_population <- round(population)\n\nanyone <- function(round_population){\n  sample(seq_along(round_population), 2)\n}\n\nnew_random_split <- function(x,y){\n  pot <- abs(x) + abs(y)\n  part1 <- sample(-pot:pot, 1)\n  other_pot <- x + y\n  part2 <- other_pot - part1\n  while (part1 > 1000 || part2 > 1000 || part1 < -1000 || part2 < -1000){\n    part1 <- sample(-pot:pot, 1)  \n    other_pot <- x + y\n    part2 <- other_pot - part1\n   }\n  return(c(part1, part2))\n}\n\nsimulation <- function(round_population,repetitions) {\n  for (i in 1:repetitions) {\n      selected_people <- anyone(round_population)\n      person1 <- round_population[selected_people[1]]\n      person2 <- round_population[selected_people[2]]\n      new_wealth <- new_random_split(person1, person2)\n      round_population[selected_people[1]] <- new_wealth[1]\n      round_population[selected_people[2]] <- new_wealth[2]\n      \n  }\n  return(round_population)\n}\n\nrepetitions <- 10000\n\nfinal_population <- simulation(round_population, repetitions)\n\nhist(final_population, breaks = 50, main = \"After Simulation Grapn\", xlab = \"Value\", col = \"skyblue\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\nThis looks even more like a normal distribution! so cool.\n\nMaybe its about finding the sweetspot.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nN  <- 5000 # Population.\nMU <- 100 # Mean of the Population\nstd_dev <- 20 # Standard deviation\n\npopulation <- rnorm(N, mean = MU, sd = std_dev)\nround_population <- round(population)\n\nanyone <- function(round_population){\n  sample(seq_along(round_population), 2)\n}\n\nnew_random_split <- function(x,y){\n  pot <- abs(x) + abs(y)\n  part1 <- sample(-pot:pot, 1)\n  other_pot <- x + y\n  part2 <- other_pot - part1\n  while (part1 > 1100 || part2 > 1100 || part1 < -1100 || part2 < -1100){\n    part1 <- sample(-pot:pot, 1)  \n    other_pot <- x + y\n    part2 <- other_pot - part1\n   }\n  return(c(part1, part2))\n}\n\nsimulation <- function(round_population,repetitions) {\n  for (i in 1:repetitions) {\n      selected_people <- anyone(round_population)\n      person1 <- round_population[selected_people[1]]\n      person2 <- round_population[selected_people[2]]\n      new_wealth <- new_random_split(person1, person2)\n      round_population[selected_people[1]] <- new_wealth[1]\n      round_population[selected_people[2]] <- new_wealth[2]\n      \n  }\n  return(round_population)\n}\n\nrepetitions <- 10000\n\nfinal_population <- simulation(round_population, repetitions)\n\nhist(final_population, breaks = 50, main = \"After Simulation Grapn\", xlab = \"Value\", col = \"skyblue\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\nHere something very interesting happens. If I adjust the repetions to the potency of 10, the graph looks way different.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nN  <- 5000 # Population.\nMU <- 100 # Mean of the Population\nstd_dev <- 20 # Standard deviation\n\npopulation <- rnorm(N, mean = MU, sd = std_dev)\nround_population <- round(population)\n\nanyone <- function(round_population){\n  sample(seq_along(round_population), 2)\n}\n\nnew_random_split <- function(x,y){\n  pot <- abs(x) + abs(y)\n  part1 <- sample(-pot:pot, 1)\n  other_pot <- x + y\n  part2 <- other_pot - part1\n  while (part1 > 1100 || part2 > 1100 || part1 < -1100 || part2 < -1100){\n    part1 <- sample(-pot:pot, 1)  \n    other_pot <- x + y\n    part2 <- other_pot - part1\n   }\n  return(c(part1, part2))\n}\n\nsimulation <- function(round_population,repetitions) {\n  for (i in 1:repetitions) {\n      selected_people <- anyone(round_population)\n      person1 <- round_population[selected_people[1]]\n      person2 <- round_population[selected_people[2]]\n      new_wealth <- new_random_split(person1, person2)\n      round_population[selected_people[1]] <- new_wealth[1]\n      round_population[selected_people[2]] <- new_wealth[2]\n      \n  }\n  return(round_population)\n}\n\nrepetitions <- 1000000\n\nfinal_population <- simulation(round_population, repetitions)\n\nhist(final_population, breaks = 50, main = \"After Simulation Grapn\", xlab = \"Value\", col = \"skyblue\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}